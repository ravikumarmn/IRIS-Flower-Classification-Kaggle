# -*- coding: utf-8 -*-
"""IRIS Flower Classification.ipynb

Automatically generated by Colaboratory.


# Required **Libraries**
"""

# Data Analysis and Data Wrangling
import numpy as np
import pandas as pd

# Visualization 
import matplotlib.pyplot as plt
import seaborn as sns

#Machine Learning
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

"""#Load and Read Data"""

train_data = pd.read_csv("IRIS.csv")
train_data.shape

#Read Data
train_data.head()

train_data.describe()

train_data.describe(include = "O")

train_data.isnull().sum()

for data in train_data.columns:
  print("no. of Unique in {1} : {0}".format(len(train_data[data].unique()),data))
  print(train_data[data].unique())
  print("-"*80)

#Replace str/sample strings into integer [Encoding]
train_data["species"] = train_data.species.replace(['Iris-setosa', 'Iris-versicolor', 'Iris-virginica'],[1,2,3])
train_data['species'].unique()

train_data.head()

"""#Visualization"""

train_data.hist(edgecolor='black',figsize=(10,10))
plt.show()

x = train_data.species.value_counts()
plt.pie(x,explode=[0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,labels=['Iris-setosa', 'Iris-versicolor', 'Iris-virginica'])
plt.show()

sns.pairplot(train_data , hue='species')

"""#Modelling"""

#standard Scaler
col = ["sepal_length","sepal_width","petal_length","petal_width"]
std = StandardScaler()
x = pd.DataFrame(std.fit_transform(train_data.drop("species",axis=1)),columns = col)
y = train_data["species"]

train_x,validation_x,train_y,validation_y = train_test_split(x,y,test_size = 0.2)
train_x.shape,validation_x.shape,train_y.shape,validation_y.shape

model = SVC(degree=4,random_state=10)
model.fit(train_x,train_y)
pred = model.predict(validation_x)
pred

accuracy = accuracy_score(validation_y,pred)
print("Accuracy : ",accuracy)

"""#**Thanks For Coming**"""
